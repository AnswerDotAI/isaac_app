"""Entry point for the app"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/main.ipynb.

# %% auto 0
__all__ = ['app', 'rt', 'redir_path', 'skip', 'client', 'oauth', 'index', 'Auth', 'login', 'logout']

# %% ../nbs/main.ipynb 2
from fasthtml.common import *
from monsterui.all import *
from fasthtml.oauth import *


# %% ../nbs/main.ipynb 3
try:
    from productivity_app.social_media import ar as ar_social
    from productivity_app.todo import ar as ar_todo
    from productivity_app.utils import *
except Exception as e:
    raise e

# %% ../nbs/main.ipynb 5
app, rt = fast_app(hdrs = Theme.blue.headers(), body_wrap=layout)

# %% ../nbs/main.ipynb 6
@rt
def index(): return Grid(*[A(Card(H3(k)),href=v) for k,v in links.items()])

# %% ../nbs/main.ipynb 7
ar_social.to_app(app)
ar_todo.to_app(app)

# %% ../nbs/main.ipynb 8
redir_path = '/redirect'
skip = ('/login', redir_path, r'/.*\.(png|jpg|ico|css|js)', )

class Auth(OAuth):
    def get_auth(self, info, ident, session, state):
        email = info.email or ''
        session['user_name'] = email
        if info.email_verified and email.split('@')[-1] == 'answer.ai': return RedirectResponse('/', status_code=303)
        
client = GoogleAppClient(os.environ.get('GOOGLE_CLIENT_ID'), os.environ.get('GOOGLE_SECRET'))
oauth = Auth(app, client, skip=skip, redir_path=redir_path)

@rt
def login(req):
    return Container(Card(
        CardTitle("Login"),
        P("For internal use only", cls=TextPresets.muted_sm),
        A('Log in', href=oauth.login_link(req), cls='uk-button'+ButtonT.primary)))

@rt
def logout(sess):
    del sess["user_name"]
    return oauth.logout(sess)

# %% ../nbs/main.ipynb 9
serve(port=5005)
